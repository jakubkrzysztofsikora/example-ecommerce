# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
trigger:
- main
pool: Default

variables:
  vmImageName: 'ubuntu-latest'
  terraformVersion: '0.15.1'

steps:
- task: TerraformInstaller@0
  inputs:
    terraformVersion: $(terraformVersion)
- task: AzureCLI@2
  inputs:
    azureSubscription: 'TestAppConnectionName'
    scriptType: 'ps'
    scriptLocation: 'inlineScript'
    inlineScript: |
      terraform init
      terraform validate
      terraform apply -auto-approve
- script: |
    echo Add other tasks to build, test, and deploy your project.
    echo See https://aka.ms/yaml
  displayName: 'Run a multi-line script'

- task: DotNetCoreCLI@2
  inputs:
    command: 'publish'
    publishWebProjects: True
    arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
    zipAfterPublish: True

- task: PublishBuildArtifacts@1

- task: AzureRmWebAppDeployment@4
  inputs:
    ConnectionType: 'AzureRM'
    azureSubscription: 'Azure subscription 1'
    appType: 'webApp'
    WebAppName: 'mywebapp54311344545'
    packageForLinux: '$(Build.ArtifactStagingDirectory)/**/*.zip'
